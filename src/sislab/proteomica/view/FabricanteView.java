/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package sislab.proteomica.view;

import java.awt.AWTEvent;
import java.awt.EventQueue;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.beans.Beans;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.RollbackException;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.KeyStroke;
import sislab.proteomica.engine.Container;

/**
 *
 * @author NILDO
 */
public class FabricanteView extends JPanel {
           private static JFrame frameFabricanteView;
           Container cont = new Container();
    public FabricanteView() {
        initComponents();
       
        if (!Beans.isDesignTime()) {
            entityManager.getTransaction().begin();
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("fenyx?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT f FROM Fabricante f Where f.idLab="+cont.getCadLaboratorio().getIdLab().toString());
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        JF_formularioFabricanteView = new javax.swing.JFrame();
        jPanel5 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jTextField3 = new javax.swing.JTextField();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        JF_pesquisar = new javax.swing.JFrame();
        jLabel5 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        converterBusca1 = new sislab.proteomica.engine.ConverterBusca();
        jButton7 = new javax.swing.JButton();
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        newButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        jbt_editar = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jbt_pesquisar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();

        FormListener formListener = new FormListener();

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(" "));

        jButton6.setText("Confirmar");
        jButton6.addActionListener(formListener);

        jButton8.setText("Cancelar");
        jButton8.addActionListener(formListener);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton8)
                .addGap(18, 18, 18)
                .addComponent(jButton6)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton8))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(" "));

        jTextField3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        try {
            jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("+## (##)##### - ####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.tel}"), jFormattedTextField1, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setBorder(javax.swing.BorderFactory.createTitledBorder("Observações"));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.obs}"), jTextArea1, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jScrollPane1.setViewportView(jTextArea1);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Email:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Fabricante:");

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.fabricante}"), jTextField1, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.site}"), jTextField2, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Website:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Tel:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1)
                            .addComponent(jTextField2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout JF_formularioFabricanteViewLayout = new javax.swing.GroupLayout(JF_formularioFabricanteView.getContentPane());
        JF_formularioFabricanteView.getContentPane().setLayout(JF_formularioFabricanteViewLayout);
        JF_formularioFabricanteViewLayout.setHorizontalGroup(
            JF_formularioFabricanteViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        JF_formularioFabricanteViewLayout.setVerticalGroup(
            JF_formularioFabricanteViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JF_formularioFabricanteViewLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Pesquisar:");

        jTextField4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${rowSorter}"), jTextField4, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(converterBusca1);
        bindingGroup.addBinding(binding);

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton4.setText("Limpar");
        jButton4.addActionListener(formListener);

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton5.setText("Fechar");
        jButton5.addActionListener(formListener);

        javax.swing.GroupLayout JF_pesquisarLayout = new javax.swing.GroupLayout(JF_pesquisar.getContentPane());
        JF_pesquisar.getContentPane().setLayout(JF_pesquisarLayout);
        JF_pesquisarLayout.setHorizontalGroup(
            JF_pesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JF_pesquisarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        JF_pesquisarLayout.setVerticalGroup(
            JF_pesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JF_pesquisarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JF_pesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        converterBusca1.setTable(masterTable);

        jButton7.setText("jButton7");

        masterScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        masterTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        masterTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        masterTable.getTableHeader().setReorderingAllowed(false);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idFabricante}"));
        columnBinding.setColumnName("ID");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${fabricante}"));
        columnBinding.setColumnName("FABRICANTE");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${site}"));
        columnBinding.setColumnName("WEBSITE");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tel}"));
        columnBinding.setColumnName("TELEFONE");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idLab}"));
        columnBinding.setColumnName("Id Lab");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${laboratorio}"));
        columnBinding.setColumnName("Laboratorio");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${obs}"));
        columnBinding.setColumnName("Obs");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterScrollPane.setViewportView(masterTable);
        if (masterTable.getColumnModel().getColumnCount() > 0) {
            masterTable.getColumnModel().getColumn(0).setResizable(false);
            masterTable.getColumnModel().getColumn(0).setPreferredWidth(60);
            masterTable.getColumnModel().getColumn(1).setResizable(false);
            masterTable.getColumnModel().getColumn(1).setPreferredWidth(300);
            masterTable.getColumnModel().getColumn(2).setResizable(false);
            masterTable.getColumnModel().getColumn(2).setPreferredWidth(250);
            masterTable.getColumnModel().getColumn(3).setResizable(false);
            masterTable.getColumnModel().getColumn(3).setPreferredWidth(130);
            masterTable.getColumnModel().getColumn(4).setResizable(false);
            masterTable.getColumnModel().getColumn(5).setResizable(false);
            masterTable.getColumnModel().getColumn(6).setResizable(false);
        }

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jToolBar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        newButton.setBackground(new java.awt.Color(102, 102, 102));
        newButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        newButton.setForeground(new java.awt.Color(255, 255, 255));
        newButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sislab/images/adicionar.png"))); // NOI18N
        newButton.setText("Novo");
        newButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newButton.setMaximumSize(new java.awt.Dimension(100, 50));
        newButton.setMinimumSize(new java.awt.Dimension(100, 50));
        newButton.setPreferredSize(new java.awt.Dimension(100, 50));
        newButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement == null}"), newButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        newButton.addActionListener(formListener);
        jToolBar1.add(newButton);

        refreshButton.setBackground(new java.awt.Color(102, 102, 102));
        refreshButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        refreshButton.setForeground(new java.awt.Color(255, 255, 255));
        refreshButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sislab/images/atualizar.png"))); // NOI18N
        refreshButton.setText("Atualizar");
        refreshButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        refreshButton.setMaximumSize(new java.awt.Dimension(100, 50));
        refreshButton.setMinimumSize(new java.awt.Dimension(100, 50));
        refreshButton.setPreferredSize(new java.awt.Dimension(100, 50));
        refreshButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        refreshButton.addActionListener(formListener);
        jToolBar1.add(refreshButton);

        jbt_editar.setBackground(new java.awt.Color(102, 102, 102));
        jbt_editar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbt_editar.setForeground(new java.awt.Color(255, 255, 255));
        jbt_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sislab/images/editar.png"))); // NOI18N
        jbt_editar.setText("Editar");
        jbt_editar.setFocusable(false);
        jbt_editar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbt_editar.setMaximumSize(new java.awt.Dimension(100, 50));
        jbt_editar.setMinimumSize(new java.awt.Dimension(100, 50));
        jbt_editar.setPreferredSize(new java.awt.Dimension(100, 50));
        jbt_editar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jbt_editar, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jbt_editar.addActionListener(formListener);
        jToolBar1.add(jbt_editar);

        deleteButton.setBackground(new java.awt.Color(102, 102, 102));
        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sislab/images/excluir_lixeira_verde.png"))); // NOI18N
        deleteButton.setText("Excluir");
        deleteButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deleteButton.setMaximumSize(new java.awt.Dimension(100, 50));
        deleteButton.setMinimumSize(new java.awt.Dimension(100, 50));
        deleteButton.setPreferredSize(new java.awt.Dimension(100, 50));
        deleteButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), deleteButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        deleteButton.addActionListener(formListener);
        jToolBar1.add(deleteButton);

        jbt_pesquisar.setBackground(new java.awt.Color(102, 102, 102));
        jbt_pesquisar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbt_pesquisar.setForeground(new java.awt.Color(255, 255, 255));
        jbt_pesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sislab/images/zoom-3.png"))); // NOI18N
        jbt_pesquisar.setText("Pesquisar");
        jbt_pesquisar.setFocusable(false);
        jbt_pesquisar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbt_pesquisar.setMaximumSize(new java.awt.Dimension(100, 50));
        jbt_pesquisar.setMinimumSize(new java.awt.Dimension(100, 50));
        jbt_pesquisar.setPreferredSize(new java.awt.Dimension(100, 50));
        jbt_pesquisar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement == null}"), jbt_pesquisar, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jbt_pesquisar.addActionListener(formListener);
        jToolBar1.add(jbt_pesquisar);

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jToolBar1.add(jPanel2);

        jButton2.setBackground(new java.awt.Color(102, 102, 102));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sislab/images/sair.png"))); // NOI18N
        jButton2.setText("Fechar");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setMaximumSize(new java.awt.Dimension(100, 50));
        jButton2.setMinimumSize(new java.awt.Dimension(100, 50));
        jButton2.setPreferredSize(new java.awt.Dimension(100, 50));
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement == null}"), jButton2, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButton2.addActionListener(formListener);
        jToolBar1.add(jButton2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jToolBar1, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 738, Short.MAX_VALUE)
            .addComponent(masterScrollPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE))
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == newButton) {
                FabricanteView.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == refreshButton) {
                FabricanteView.this.refreshButtonActionPerformed(evt);
            }
            else if (evt.getSource() == jbt_editar) {
                FabricanteView.this.jbt_editarActionPerformed(evt);
            }
            else if (evt.getSource() == deleteButton) {
                FabricanteView.this.deleteButtonActionPerformed(evt);
            }
            else if (evt.getSource() == jbt_pesquisar) {
                FabricanteView.this.jbt_pesquisarActionPerformed(evt);
            }
            else if (evt.getSource() == jButton2) {
                FabricanteView.this.jButton2ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton6) {
                FabricanteView.this.jButton6ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton8) {
                FabricanteView.this.jButton8ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton4) {
                FabricanteView.this.jButton4ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton5) {
                FabricanteView.this.jButton5ActionPerformed(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    
    @SuppressWarnings("unchecked")
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
    jTextField4.setText("");
        atualizar();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
    excluir();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
    novo();
    }//GEN-LAST:event_newButtonActionPerformed
    
    private void jbt_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_editarActionPerformed
    editar();
    }//GEN-LAST:event_jbt_editarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
fecharJanela();     
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jbt_pesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_pesquisarActionPerformed
callPesquisa();
    }//GEN-LAST:event_jbt_pesquisarActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
  JF_pesquisar.dispose();
     atualizar();    
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
jTextField4.setText("");
atualizar();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
fechaSalvandoFrame();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
fechaCancelandoCadastro();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed
    
          public void callPesquisa()      
    {   
        JF_pesquisar.setSize(616, 61);//[616, 61]
        JF_pesquisar.setLocationRelativeTo(null);
        JF_pesquisar.pack();
        JF_pesquisar.setResizable(false);
        JF_pesquisar.setVisible(true);
    }
      
    public void fechaSalvandoFrame()
    {
//    jbt_cancelaCadastroFormulario.setEnabled(false);
//    jbt_salvaFormulario.setEnabled(false);
     salvar();
    JF_formularioFabricanteView.dispose();
 //   frameFabricanteView.setVisible(true);
    }
    
       public void fechaCancelandoCadastro()
    {
//
//    jbt_cancelaCadastroFormulario.setEnabled(false);
//    jbt_salvaFormulario.setEnabled(false);
    JF_formularioFabricanteView.dispose();
    atualizar();
  //  frameFabricanteView.setVisible(true);
    }
    
       
       
       
          public void novo()
    {
        
        Date d = new Date();
        sislab.proteomica.beans.Fabricante f = new sislab.proteomica.beans.Fabricante();
        entityManager.persist(f);
        f.setIdLab(cont.getCadLaboratorio().getIdLab().toString());
        f.setLaboratorio(cont.getCadLaboratorio().getLaboratorio());
        
        list.add(f);
        int row = list.size()-1;
        masterTable.setRowSelectionInterval(row, row);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
//
//        Date d = new Date();
//           sislab.proteomica.view.estoque.NomeEstoque n = new sislab.proteomica.view.estoque.NomeEstoque();
//        entityManager.persist(n);
//        list.add(n);
//        int row = list.size() - 1;
//        masterTable.setRowSelectionInterval(row, row);
//        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
     callFormulario();
  //   frameFabricanteView.setVisible(false);
        
    }
          
          
   public void callFormulario()      
    {   
 
        JF_formularioFabricanteView.setSize(613, 273);//[446, 172]
        JF_formularioFabricanteView.setLocationRelativeTo(null);
        JF_formularioFabricanteView.pack();
        JF_formularioFabricanteView.setResizable(false);
        JF_formularioFabricanteView.setVisible(true);
 
//        jtf_laboratorio.setVisible(false);
//        jtf_idLab.setVisible(false);
//        jtf_idLocalizacao.setVisible(false);
//        jbt_cancelaCadastroFormulario.setEnabled(true);
//        jbt_salvaFormulario.setEnabled(true);
    }
   
    public void atualizar()
    {
            entityManager.getTransaction().rollback();
        entityManager.getTransaction().begin();
        java.util.Collection data = query.getResultList();
        for (Object entity : data) {
            entityManager.refresh(entity);
        }
        list.clear();
        list.addAll(data);
        
    }
    
    
    
    public void editar()
    {
        
        
        JF_formularioFabricanteView.setSize(613, 273);//[]
        JF_formularioFabricanteView.setLocationRelativeTo(null);
        JF_formularioFabricanteView.pack();
        JF_formularioFabricanteView.setResizable(false);
        JF_formularioFabricanteView.setVisible(true);
        
//        
//        jtf_laboratorio.setVisible(false);
//        jtf_idLab.setVisible(false);
//        jtf_idLocalizacao.setVisible(false);
//
//         jbt_cancelaCadastroFormulario.setEnabled(true);
//         jbt_salvaFormulario.setEnabled(true);
    }

   public void fecharJanela()
   {
     int opcao;
        Object[] botoes = {" SIM "," NÃO "};
        opcao = JOptionPane.showOptionDialog(null, "Deseja Fechar o Cadastro de Fabricantes ?", "PERGUNTA DO SISTEMA", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,null,botoes,botoes[0]);
        if (opcao ==  JOptionPane.YES_OPTION) {
                
                
                
                frameFabricanteView.dispose();
                
        }

   
   }

    public void salvar()
    {
               try {
            entityManager.getTransaction().commit();
            entityManager.getTransaction().begin();
        } catch (RollbackException rex) {
            rex.printStackTrace();
            entityManager.getTransaction().begin();
            List<sislab.proteomica.beans.Fabricante> merged = new ArrayList<sislab.proteomica.beans.Fabricante>(list.size());
            for (sislab.proteomica.beans.Fabricante f : list) {
                f.setIdLab("1");
                merged.add(entityManager.merge(f));
            }
            list.clear();
            list.addAll(merged);
        
        }
              atualizar();
              deleteButton.setEnabled(false);
              newButton.setEnabled(true);

  
    }

    public void salvarExclusao()
    {
          try {
            entityManager.getTransaction().commit();
            entityManager.getTransaction().begin();
        } catch (RollbackException rex) {
            rex.printStackTrace();
            entityManager.getTransaction().begin();
            List<sislab.proteomica.beans.Fabricante> merged = new ArrayList<sislab.proteomica.beans.Fabricante>(list.size());
            for (sislab.proteomica.beans.Fabricante f : list) {
                merged.add(entityManager.merge(f));
            }
            list.clear();
            list.addAll(merged);
        }
    }
 
    public void excluir()
    {
         int opcao;
        Object[] botoes = {" SIM "," NÃO "};
        opcao = JOptionPane.showOptionDialog(null, "Confirma exclusão do registro ?", "PERGUNTA DO SISTEMA", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,null,botoes,botoes[0]);
        if (opcao ==  JOptionPane.YES_OPTION) {
              int[] selected = masterTable.getSelectedRows();
        List<sislab.proteomica.beans.Fabricante> toRemove = new ArrayList<sislab.proteomica.beans.Fabricante>(selected.length);
        for (int idx=0; idx<selected.length; idx++) {
            sislab.proteomica.beans.Fabricante f = list.get(masterTable.convertRowIndexToModel(selected[idx]));
            toRemove.add(f);
            entityManager.remove(f);
        }
        list.removeAll(toRemove);
               try {
            entityManager.getTransaction().commit();
            entityManager.getTransaction().begin();
        } catch (RollbackException rex) {
            rex.printStackTrace();
            entityManager.getTransaction().begin();
            List<sislab.proteomica.beans.Fabricante> merged = new ArrayList<sislab.proteomica.beans.Fabricante>(list.size());
            for (sislab.proteomica.beans.Fabricante f : list) {
                merged.add(entityManager.merge(f));
            }
            list.clear();
            list.addAll(merged);
        
        }

        atualizar();
        }

        atualizar();
    }
        
        
//    public void novo()
//    {
//        Date d = new Date();
//                 sislab.proteomica.beans.Fabricante f = new sislab.proteomica.beans.Fabricante();
//        entityManager.persist(f);
//        f.setIdLab(cont.getCadLaboratorio().getIdLab().toString());
//        f.setLaboratorio(cont.getCadLaboratorio().getLaboratorio());
//        list.add(f);
//        int row = list.size()-1;
//        masterTable.setRowSelectionInterval(row, row);
//        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
//        FabricanteEditView fed = new FabricanteEditView(null, true);
//        fed.setRegistroAtualFabricante(f);
//        fed.setVisible(true);
//        if(fed.isConfirmaFabricanteEdit()){
//        salvar();
//           int opcao;
//        Object[] botoes = {" SIM "," NÃO "};
//        opcao = JOptionPane.showOptionDialog(null, "Deseja realizar um novo cadastro Fabricantes ?", "PERGUNTA DO SISTEMA", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,null,botoes,botoes[0]);
//        if (opcao ==  JOptionPane.YES_OPTION) {
//                
//            novo();
//            }
//        else {
//        
//        refreshButton.doClick();
//        }
//        }
//        else
//        {
//        refreshButton.doClick();
//        }
//
//    }

//    public void atualizar()
//    {
//            entityManager.getTransaction().rollback();
//        entityManager.getTransaction().begin();
//        java.util.Collection data = query.getResultList();
//        for (Object entity : data) {
//            entityManager.refresh(entity);
//        }
//        list.clear();
//        list.addAll(data);
//
//  
//
//    }
//    public void editar()
//    {
//        FabricanteEditView fb = new FabricanteEditView(null, true);
//        fb.setRegistroAtualFabricante(list.get(masterTable.getSelectedRow()));
//        fb.setVisible(true);
//        if(fb.isConfirmaFabricanteEdit()){
//       salvar();
//            //saveButton.doClick();
//        }else{
//       refreshButton.doClick();
//        }
//    }


   private void hotKeyF1()
    {
            frameFabricanteView.getRootPane().registerKeyboardAction(new ActionListener() {
            public void actionPerformed(ActionEvent e)
            {
            newButton.doClick();
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_F1, 0),
                JComponent.WHEN_IN_FOCUSED_WINDOW);
    }
      private void hotKeyF2()
    {
            frameFabricanteView.getRootPane().registerKeyboardAction(new ActionListener() {
            public void actionPerformed(ActionEvent e)
            {
                JF_formularioFabricanteView.dispose();
                   refreshButton.requestFocus();
                refreshButton.doClick();
              jTextField4.setText("");
                atualizar();
          
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0),JComponent.WHEN_IN_FOCUSED_WINDOW);
    }
      
      
       private void hotKeyF3()
    {
            frameFabricanteView.getRootPane().registerKeyboardAction(new ActionListener() {
            public void actionPerformed(ActionEvent e)
            {
                salvar();
            //saveButton.doClick();
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_F3, 0),
                JComponent.WHEN_IN_FOCUSED_WINDOW);
    }
        private void hotKeyF4()
    {
            frameFabricanteView.getRootPane().registerKeyboardAction(new ActionListener() {
            public void actionPerformed(ActionEvent e)
            {
            jbt_editar.doClick();
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_F4, 0),
                JComponent.WHEN_IN_FOCUSED_WINDOW);
    }

     private void hotKeyF5()
    {
            frameFabricanteView.getRootPane().registerKeyboardAction(new ActionListener() {
            public void actionPerformed(ActionEvent e)
            {
            if(masterTable.getSelectedRow() > 0)
            {
                deleteButton.doClick();
            }
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_F5, 0),
                JComponent.WHEN_IN_FOCUSED_WINDOW);
    }

        private void hotKeyF6()
    {
            frameFabricanteView.getRootPane().registerKeyboardAction(new ActionListener() {
            public void actionPerformed(ActionEvent e)
            {
//            if(masterTable.getSelectedRow() > 0)
//            {
        JF_pesquisar.setSize(616, 61);//[616, 61]
        JF_pesquisar.setLocationRelativeTo(null);
        JF_pesquisar.pack();
        JF_pesquisar.setResizable(false);
        JF_pesquisar.setVisible(true);
            //}
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_F6, 0),
                JComponent.WHEN_IN_FOCUSED_WINDOW);
    }
     
     
         private void hotKeyEsc()
    {
            frameFabricanteView.getRootPane().registerKeyboardAction(new ActionListener() {
            public void actionPerformed(ActionEvent e)
            {
                         
                 int opcao;
        Object[] botoes = {" SIM "," NÃO "};
        opcao = JOptionPane.showOptionDialog(null, "Deseja Fechar o Cadastro de Fabricantes ?", "PERGUNTA DO SISTEMA", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,null,botoes,botoes[0]);
        if (opcao ==  JOptionPane.YES_OPTION) {
                
             
                
                frameFabricanteView.dispose();
               
                
        }
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0),
                JComponent.WHEN_IN_FOCUSED_WINDOW);
    }

           private void iniKeyActions()
           {
           hotKeyF1();
           hotKeyF2();
           hotKeyF3();
           hotKeyF4();
           hotKeyF5();
           hotKeyF6();
           //hotKeyDel();
           hotKeyEsc();
           iniKeyActionsSetas();
           }

     private void iniKeyActionsSetas()
    {

              EventQueue queue = new EventQueue()
		{
			protected void dispatchEvent(AWTEvent event)
			{
				super.dispatchEvent(event);


					String a[];
					String tecla[];

					if (!event.paramString().equals("")) {
						if  (event.paramString().substring(0, 5).equals("KEY_P")) {
							a = event.paramString().split(",");
							tecla = a[1].split("=");
                                                     //  System.out.println(tecla[1]);
							switch (Integer.parseInt(tecla[1])) {
                                                      case 9: //TAB

								break;
                                                            case 10: //ENTER

								break;
                                                       case 27: //ESC

								break;
                                                       case 33: //PGUP

                                                                break;
                                                       case 34: //PGDN

                                                                break;
                                                       case 35: //END

                                                                break;
                                                       case 36: //HOME

                                                                break;
                                                       case 37: //SETA-ESQUERDA

                                                                break;
                                                       case 38: //SETA-ACIMA
                                                       masterTable.requestFocusInWindow();
                                                                break;
                                                       case 39: //SETA-DIREITA

                                                                break;
                                                       case 40: //PARA BAIXO
                                                       masterTable.requestFocusInWindow();
                                                                break;
                                                       case 49: // 1

                                                           	break;
                                                       case 50: // 2

                                                           	break;
                                                       case 51: // 3

                                                           	break;
                                                       case 52: // 4

                                                           	break;
                                                       case 53: // 5

                                                           	break;
                                                       case 54: // 6

                                                           	break;
                                                       case 55: // 7

                                                           	break;
                                                       case 56: // 8

                                                           	break;
                                                       case 57: // 9

								break;
							case 112: //F1

								break;
							case 113: //F2

								break;
							case 114: //F3

								break;
							case 115: //F4

								break;
							case 116: //F5

								break;
							case 117: //F6
//
								break;
							case 118: //F7
//
								break;
							case 119: //F8
//
								break;
							case 120: //F9

								break;
							case 121: //F10
//
								break;
							case 122: //F11
//
								break;
							case 123: //F12
//
								break;

							case 127: //DEL
                                                    //    deleteButton.doClick();
								break;
							default:
                                                        	break;
							}
						}
					}
			}
		};
		Toolkit.getDefaultToolkit().getSystemEventQueue().push(queue);
     }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame JF_formularioFabricanteView;
    private javax.swing.JFrame JF_pesquisar;
    private sislab.proteomica.engine.ConverterBusca converterBusca1;
    private javax.swing.JButton deleteButton;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton jbt_editar;
    private javax.swing.JButton jbt_pesquisar;
    private java.util.List<sislab.proteomica.beans.Fabricante> list;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JButton newButton;
    private javax.persistence.Query query;
    private javax.swing.JButton refreshButton;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    
    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                if(frameFabricanteView == null) 
                frameFabricanteView = new JFrame();
                frameFabricanteView.setContentPane(new FabricanteView());
                frameFabricanteView.setSize(738, 528);//[644, 578][][]
                frameFabricanteView.setResizable(false);
                frameFabricanteView.setLocationRelativeTo(null);
                frameFabricanteView.pack();
                frameFabricanteView.setVisible(true);
                frameFabricanteView.setTitle(args[0]); 
            }
        });
    }

}
