/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sislab.proteomica.view.estoque;

import java.awt.AWTEvent;
import java.awt.EventQueue;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.beans.Beans;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.RollbackException;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.KeyStroke;
import sislab.proteomica.engine.Container;
import sislab.proteomica.importsview.NomeEstoqueImport;

/**
 *
 * @author NILDO
 */
public class TipoEstoqueView extends JPanel {
      private static JFrame frameTipoEstoqueView;
      public static TipoEstoqueView tps;
      Container cont = new Container();
    public TipoEstoqueView() {
        initComponents();
        jtf_laboratorio.setVisible(false);
        jtf_idNomeEstoque.setVisible(false);
        jtf_idLocal.setVisible(false);
        jtf_idLab.setVisible(false);
        if (!Beans.isDesignTime()) {
            entityManager.getTransaction().begin();
        }
        iniKeyActions();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("fenyx?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT t FROM TipoEstoque t WHERE t.idLab ="+cont.getCadLaboratorio().getIdLab().toString());
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        JF_TipoEstoqueView = new javax.swing.JFrame();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jtf_sala = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtf_nomeEstoque = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jtf_idLab = new javax.swing.JTextField();
        jtf_idLocal = new javax.swing.JTextField();
        jtf_idNomeEstoque = new javax.swing.JTextField();
        jtf_laboratorio = new javax.swing.JTextField();
        jtf_localizacao = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtf_tipoEstoque = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        cadLocalizacaoQuery = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT c FROM CadLocalizacao c WHERE c.idLab ="+cont.getCadLaboratorio().getIdLab().toString());
        cadLocalizacaoList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : cadLocalizacaoQuery.getResultList();
        tipoEstoqueCellRenderer1 = new sislab.proteomica.view.estoque.TipoEstoqueCellRenderer();
        JF_pesquisar = new javax.swing.JFrame();
        jLabel6 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        converterBusca1 = new sislab.proteomica.engine.ConverterBusca();
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        newButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        jbt_editar = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        FormListener formListener = new FormListener();

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Tipo Estoque:");

        jtf_sala.setEditable(false);
        jtf_sala.setBackground(new java.awt.Color(204, 204, 255));
        jtf_sala.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.sala}"), jtf_sala, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jtf_sala, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Nome Estoque:");

        jtf_nomeEstoque.setEditable(false);
        jtf_nomeEstoque.setBackground(new java.awt.Color(204, 204, 255));
        jtf_nomeEstoque.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.nomeEstoque}"), jtf_nomeEstoque, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jtf_nomeEstoque, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sislab/images/viewmag.png"))); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jButton2, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButton2.addActionListener(formListener);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.idLab}"), jtf_idLab, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.idLocal}"), jtf_idLocal, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jtf_idLocal.addActionListener(formListener);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.idNomeEstoque}"), jtf_idNomeEstoque, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.laboratorio}"), jtf_laboratorio, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jtf_idLab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtf_idLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jtf_idNomeEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jtf_laboratorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtf_idLab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtf_idLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtf_idNomeEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtf_laboratorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtf_localizacao.setEditable(false);
        jtf_localizacao.setBackground(new java.awt.Color(204, 204, 255));
        jtf_localizacao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.localizacao}"), jtf_localizacao, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jtf_localizacao, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Localização:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Sala:");

        jtf_tipoEstoque.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.tipoEstoque}"), jtf_tipoEstoque, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jtf_tipoEstoque, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jtf_localizacao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtf_sala)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtf_tipoEstoque)
                            .addComponent(jtf_nomeEstoque))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtf_localizacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jtf_sala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtf_nomeEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtf_tipoEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton7.setText("Importar");
        jButton7.addActionListener(formListener);

        jButton8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton8.setText("Ad. Registro");
        jButton8.addActionListener(formListener);

        jButton9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton9.setText("Sair");
        jButton9.addActionListener(formListener);

        javax.swing.GroupLayout JF_TipoEstoqueViewLayout = new javax.swing.GroupLayout(JF_TipoEstoqueView.getContentPane());
        JF_TipoEstoqueView.getContentPane().setLayout(JF_TipoEstoqueViewLayout);
        JF_TipoEstoqueViewLayout.setHorizontalGroup(
            JF_TipoEstoqueViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JF_TipoEstoqueViewLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JF_TipoEstoqueViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JF_TipoEstoqueViewLayout.createSequentialGroup()
                        .addGap(0, 246, Short.MAX_VALUE)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton8)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7)))
                .addContainerGap())
        );
        JF_TipoEstoqueViewLayout.setVerticalGroup(
            JF_TipoEstoqueViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JF_TipoEstoqueViewLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(JF_TipoEstoqueViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton8)
                    .addComponent(jButton9))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tipoEstoqueCellRenderer1.setText("tipoEstoqueCellRenderer1");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Local:");

        jComboBox2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox2.setRenderer(tipoEstoqueCellRenderer1);

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, cadLocalizacaoList, jComboBox2);
        bindingGroup.addBinding(jComboBoxBinding);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Pesquisar:");

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${rowSorter}"), jTextField1, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton4.setText("Pesquisar");

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton6.setText("Limpar");

        javax.swing.GroupLayout JF_pesquisarLayout = new javax.swing.GroupLayout(JF_pesquisar.getContentPane());
        JF_pesquisar.getContentPane().setLayout(JF_pesquisarLayout);
        JF_pesquisarLayout.setHorizontalGroup(
            JF_pesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JF_pesquisarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JF_pesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(JF_pesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1)
                    .addComponent(jComboBox2, 0, 333, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(JF_pesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );
        JF_pesquisarLayout.setVerticalGroup(
            JF_pesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JF_pesquisarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JF_pesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(JF_pesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        masterScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        masterTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        masterTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        masterTable.setRowHeight(18);
        masterTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        masterTable.getTableHeader().setResizingAllowed(false);
        masterTable.getTableHeader().setReorderingAllowed(false);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nomeEstoque}"));
        columnBinding.setColumnName("NOME ESTOQUE");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${tipoEstoque}"));
        columnBinding.setColumnName("TIPO ESTOQUE");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${localizacao}"));
        columnBinding.setColumnName("LOCALIZAÇÃO");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${sala}"));
        columnBinding.setColumnName("SALA");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${laboratorio}"));
        columnBinding.setColumnName("Laboratorio");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idLab}"));
        columnBinding.setColumnName("Id Lab");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idLocal}"));
        columnBinding.setColumnName("Id Local");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idTipoEstoque}"));
        columnBinding.setColumnName("ID");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        masterScrollPane.setViewportView(masterTable);
        if (masterTable.getColumnModel().getColumnCount() > 0) {
            masterTable.getColumnModel().getColumn(0).setResizable(false);
            masterTable.getColumnModel().getColumn(0).setPreferredWidth(265);
            masterTable.getColumnModel().getColumn(1).setResizable(false);
            masterTable.getColumnModel().getColumn(1).setPreferredWidth(230);
            masterTable.getColumnModel().getColumn(2).setResizable(false);
            masterTable.getColumnModel().getColumn(2).setPreferredWidth(180);
            masterTable.getColumnModel().getColumn(3).setResizable(false);
            masterTable.getColumnModel().getColumn(3).setPreferredWidth(100);
            masterTable.getColumnModel().getColumn(4).setResizable(false);
            masterTable.getColumnModel().getColumn(4).setPreferredWidth(200);
            masterTable.getColumnModel().getColumn(5).setResizable(false);
            masterTable.getColumnModel().getColumn(6).setResizable(false);
            masterTable.getColumnModel().getColumn(7).setResizable(false);
            masterTable.getColumnModel().getColumn(7).setPreferredWidth(60);
        }

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jToolBar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        newButton.setBackground(new java.awt.Color(102, 102, 102));
        newButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        newButton.setForeground(new java.awt.Color(255, 255, 255));
        newButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sislab/images/adicionar.png"))); // NOI18N
        newButton.setText("Novo");
        newButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newButton.setMaximumSize(new java.awt.Dimension(100, 50));
        newButton.setMinimumSize(new java.awt.Dimension(100, 50));
        newButton.setPreferredSize(new java.awt.Dimension(100, 50));
        newButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement == null}"), newButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        newButton.addActionListener(formListener);
        jToolBar1.add(newButton);

        refreshButton.setBackground(new java.awt.Color(102, 102, 102));
        refreshButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        refreshButton.setForeground(new java.awt.Color(255, 255, 255));
        refreshButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sislab/images/atualizar.png"))); // NOI18N
        refreshButton.setText("Atualizar");
        refreshButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        refreshButton.setMaximumSize(new java.awt.Dimension(100, 50));
        refreshButton.setMinimumSize(new java.awt.Dimension(100, 50));
        refreshButton.setPreferredSize(new java.awt.Dimension(100, 50));
        refreshButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        refreshButton.addActionListener(formListener);
        jToolBar1.add(refreshButton);

        jbt_editar.setBackground(new java.awt.Color(102, 102, 102));
        jbt_editar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbt_editar.setForeground(new java.awt.Color(255, 255, 255));
        jbt_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sislab/images/editar.png"))); // NOI18N
        jbt_editar.setText("Editar");
        jbt_editar.setFocusable(false);
        jbt_editar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbt_editar.setMaximumSize(new java.awt.Dimension(100, 50));
        jbt_editar.setMinimumSize(new java.awt.Dimension(100, 50));
        jbt_editar.setPreferredSize(new java.awt.Dimension(100, 50));
        jbt_editar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jbt_editar, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jbt_editar.addActionListener(formListener);
        jToolBar1.add(jbt_editar);

        deleteButton.setBackground(new java.awt.Color(102, 102, 102));
        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sislab/images/excluir_lixeira_verde.png"))); // NOI18N
        deleteButton.setText("Excluir");
        deleteButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deleteButton.setMaximumSize(new java.awt.Dimension(100, 50));
        deleteButton.setMinimumSize(new java.awt.Dimension(100, 50));
        deleteButton.setPreferredSize(new java.awt.Dimension(100, 50));
        deleteButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), deleteButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        deleteButton.addActionListener(formListener);
        jToolBar1.add(deleteButton);

        jButton3.setBackground(new java.awt.Color(102, 102, 102));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sislab/images/zoom-3.png"))); // NOI18N
        jButton3.setText("Pesquisar");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setMaximumSize(new java.awt.Dimension(100, 50));
        jButton3.setMinimumSize(new java.awt.Dimension(100, 50));
        jButton3.setPreferredSize(new java.awt.Dimension(100, 50));
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(formListener);
        jToolBar1.add(jButton3);

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jToolBar1.add(jPanel2);

        jButton1.setBackground(new java.awt.Color(102, 102, 102));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sislab/images/sair.png"))); // NOI18N
        jButton1.setText("Sair - Esc");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setMaximumSize(new java.awt.Dimension(100, 50));
        jButton1.setMinimumSize(new java.awt.Dimension(100, 50));
        jButton1.setPreferredSize(new java.awt.Dimension(100, 50));
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement == null}"), jButton1, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButton1.addActionListener(formListener);
        jToolBar1.add(jButton1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jToolBar1, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 772, Short.MAX_VALUE)
            .addComponent(masterScrollPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(masterScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE))
        );

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == newButton) {
                TipoEstoqueView.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == refreshButton) {
                TipoEstoqueView.this.refreshButtonActionPerformed(evt);
            }
            else if (evt.getSource() == jbt_editar) {
                TipoEstoqueView.this.jbt_editarActionPerformed(evt);
            }
            else if (evt.getSource() == deleteButton) {
                TipoEstoqueView.this.deleteButtonActionPerformed(evt);
            }
            else if (evt.getSource() == jButton3) {
                TipoEstoqueView.this.jButton3ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton1) {
                TipoEstoqueView.this.jButton1ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton8) {
                TipoEstoqueView.this.jButton8ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton9) {
                TipoEstoqueView.this.jButton9ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton7) {
                TipoEstoqueView.this.jButton7ActionPerformed(evt);
            }
            else if (evt.getSource() == jButton2) {
                TipoEstoqueView.this.jButton2ActionPerformed(evt);
            }
            else if (evt.getSource() == jtf_idLocal) {
                TipoEstoqueView.this.jtf_idLocalActionPerformed(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    
    @SuppressWarnings("unchecked")
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
//        entityManager.getTransaction().rollback();
//        entityManager.getTransaction().begin();
//        java.util.Collection data = query.getResultList();
//        for (Object entity : data) {
//            entityManager.refresh(entity);
//        }
//        list.clear();
//        list.addAll(data);
                                query = entityManager.createNamedQuery("TipoEstoque.findByIdLab");
                                query.setParameter("idLab", cont.getCadLaboratorio().getIdLab().toString());
                                java.util.Collection dadosResposta1 = query.getResultList();
                                list.clear();
                                list.addAll(dadosResposta1);
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
       
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
novo();
    }//GEN-LAST:event_newButtonActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
fecharJanela();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jbt_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbt_editarActionPerformed
     editar();   // TODO add your handling code here:
    }//GEN-LAST:event_jbt_editarActionPerformed

    private void jtf_idLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_idLocalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_idLocalActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    callNomeEstoque();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
    fechaCancelandoCadastro();        
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
    fechaSalvandoFrame();    
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
  String args[] = new String[1];
        args[0] = "Cadastro de Nomes de Estoques";
        NomeEstoqueView.main(args);  
    }//GEN-LAST:event_jButton8ActionPerformed


                             public void  pesquisarJPA(){
  
                             String filtro = String.valueOf(jComboBox2.getSelectedItem());
                             System.out.println("filtro: "+filtro);
                             int tmt = filtro.length();
                             System.out.println(String.valueOf("tmt: "+tmt));
                             String filtrado = filtro.substring((tmt-3), tmt);
                             System.out.println("filtrado: "+filtrado);
                             int tmt1 = filtrado.length();
                             System.out.println(String.valueOf("tmt1: "+tmt1));
                             String fil1 = filtrado.substring(0, (tmt1-1));
                             System.out.println(fil1);
 
                              query = entityManager.createNamedQuery("TipoEstoque.BuscaLocalizacao");
                              query.setParameter("idLab", cont.getCadLaboratorio().getIdLab().toString());
                              query.setParameter("idLocal",fil1);
                              java.util.Collection dadosResposta1 = query.getResultList();
                              list.clear();
                              list.addAll(dadosResposta1);
                            
                        } 
    
 public void fecharJanela()
   {
     int opcao;
        Object[] botoes = {" SIM "," NÃO "};
        opcao = JOptionPane.showOptionDialog(null, "Deseja Fechar o Cadastro de Tipos de Estoque ?", "PERGUNTA DO SISTEMA", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,null,botoes,botoes[0]);
        if (opcao ==  JOptionPane.YES_OPTION) {

                frameTipoEstoqueView.dispose();       
        }
   
   }
 
   public void callNomeEstoque()
   {
      String args[] = new String[1];
      args[0] = "Importar Nomes de Estoques";
       NomeEstoqueImport.main(args);
   } 


    public void callChangeLocalition()
    {
        jtf_laboratorio.setVisible(false);
        jtf_idLab.setVisible(false);
        jtf_laboratorio.setVisible(false);
        jtf_idLab.setVisible(false);
        jtf_laboratorio.setVisible(true);
        JF_TipoEstoqueView.setSize(604, 281);//335, 209
        JF_TipoEstoqueView.setLocationRelativeTo(null);
        JF_TipoEstoqueView.pack();
        JF_TipoEstoqueView.setResizable(false);
        JF_TipoEstoqueView.setVisible(true);
    }
    
    
    
    public void fechaSalvandoFrame()
    {
//    jbt_cancelaCadastroFormulario.setEnabled(false);
//    jbt_salvaFormulario.setEnabled(false);
     salvar();
    JF_TipoEstoqueView.dispose();
    }
    
       public void fechaCancelandoCadastro()
    {
//
//    jbt_cancelaCadastroFormulario.setEnabled(false);
//    jbt_salvaFormulario.setEnabled(false);
    JF_TipoEstoqueView.dispose();
    atualizar();
    }
    
       
      
    public void salvar()
    {
//      if(jtf_nomeReagente.getText().isEmpty() && jtf_quantUnd.getText().isEmpty() )
//      {
//          
//      JOptionPane.showMessageDialog(null, "Não foi possível salvar este registro", "Formulário Imcompleto", JOptionPane.ERROR_MESSAGE);
//     
//      }
//      else if (jtf_nomeReagente.getText().length()>5 && jtf_quantUnd.getText().length()>5 ){
      
            try {
            entityManager.getTransaction().commit();
            entityManager.getTransaction().begin();
        } catch (RollbackException rex) {
            rex.printStackTrace();
            entityManager.getTransaction().begin();
            List<sislab.proteomica.view.estoque.TipoEstoque> merged = new ArrayList<sislab.proteomica.view.estoque.TipoEstoque>(list.size());
            for (sislab.proteomica.view.estoque.TipoEstoque t : list) {
              
                merged.add(entityManager.merge(t));
            }
            list.clear();
            list.addAll(merged);
        
        }
              atualizar();
//              deleteButton.setEnabled(false);
//              newButton.setEnabled(true);
//                jbt_editar.setEnabled(true);
//              
      
      
  
    }

    public void salvarExclusao()
    {
        try {
            entityManager.getTransaction().commit();
            entityManager.getTransaction().begin();
        } catch (RollbackException rex) {
            rex.printStackTrace();
            entityManager.getTransaction().begin();
            List<sislab.proteomica.view.estoque.TipoEstoque> merged = new ArrayList<sislab.proteomica.view.estoque.TipoEstoque>(list.size());
            for (sislab.proteomica.view.estoque.TipoEstoque t : list) {
              //  t.getTipoEstoque();
                merged.add(entityManager.merge(t));
            }
            list.clear();
            list.addAll(merged);
        }
    }
 
    public void excluir()
    {
         int opcao;
        Object[] botoes = {" SIM "," NÃO "};
        opcao = JOptionPane.showOptionDialog(null, "Confirma exclusão do registro de Tipos de Estoque: "+masterTable.getValueAt(masterTable.getSelectedRow(), 1), "PERGUNTA DO SISTEMA", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,null,botoes,botoes[0]);
        if (opcao ==  JOptionPane.YES_OPTION) {
             int[] selected = masterTable.getSelectedRows();
        List<sislab.proteomica.view.estoque.TipoEstoque> toRemove = new ArrayList<sislab.proteomica.view.estoque.TipoEstoque>(selected.length);
        for (int idx = 0; idx < selected.length; idx++) {
            sislab.proteomica.view.estoque.TipoEstoque t = list.get(masterTable.convertRowIndexToModel(selected[idx]));
            toRemove.add(t);
            entityManager.remove(t);
        }
        list.removeAll(toRemove);
         try {
            entityManager.getTransaction().commit();
            entityManager.getTransaction().begin();
        } catch (RollbackException rex) {
            rex.printStackTrace();
            entityManager.getTransaction().begin();
            List<sislab.proteomica.view.estoque.TipoEstoque> merged = new ArrayList<sislab.proteomica.view.estoque.TipoEstoque>(list.size());
            for (sislab.proteomica.view.estoque.TipoEstoque t : list) {
                merged.add(entityManager.merge(t));
            }
            list.clear();
            list.addAll(merged);
        }
//        jTabbedPane1.setEnabledAt(1, false);
        atualizar();
        }
//        jTabbedPane1.setEnabledAt(1, false);
//        jTabbedPane1.setSelectedIndex(0);
        atualizar();
    }
        
        
    public void novo()
    {
        Date d = new Date();
           sislab.proteomica.view.estoque.TipoEstoque t = new sislab.proteomica.view.estoque.TipoEstoque();
        entityManager.persist(t);
       // t.setTipoEstoque(jComboBox2.getSelectedItem()+" "+jtf_tipoEstoque.getText());
        list.add(t);
        int row = list.size() - 1;
        masterTable.setRowSelectionInterval(row, row);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
   
         JF_TipoEstoqueView.setSize(557, 237);//[][557, 237]
        JF_TipoEstoqueView.setLocationRelativeTo(null);
        JF_TipoEstoqueView.pack();
        JF_TipoEstoqueView.setResizable(false);
        JF_TipoEstoqueView.setVisible(true);
        JF_TipoEstoqueView.setTitle("Cadastrar");
        
        
        jtf_laboratorio.setVisible(false);
        jtf_idLab.setVisible(false);
         jtf_laboratorio.setVisible(false);
        jtf_idLab.setVisible(false);
        jtf_laboratorio.setVisible(false);
//         jbt_cancelaCadastroFormulario.setEnabled(true);
//         jbt_salvaFormulario.setEnabled(true);
        
    }

    public void atualizar()
    {
            entityManager.getTransaction().rollback();
        entityManager.getTransaction().begin();
        java.util.Collection data = query.getResultList();
        for (Object entity : data) {
            entityManager.refresh(entity);
        }
        list.clear();
        list.addAll(data);
    }
    
    
    
    public void editar()
    {
      
    
//        jtf_laboratorio.setVisible(false);
//        jtf_idLab.setVisible(false);
//        jtf_laboratorio.setVisible(false);
//        jtf_idLab.setVisible(false);
//        jtf_laboratorio.setVisible(true);
//
//        jbt_cancelaCadastroFormulario.setEnabled(true);
//        jbt_salvaFormulario.setEnabled(true);
//         
//         
//        JF_TipoEstoqueView.setSize(450, 207);
//        JF_TipoEstoqueView.setLocationRelativeTo(null);
//        JF_TipoEstoqueView.pack();
//        JF_TipoEstoqueView.setResizable(false);
//        JF_TipoEstoqueView.setVisible(true);
        
        
           JF_TipoEstoqueView.setSize(557, 237);//557, 237
        JF_TipoEstoqueView.setLocationRelativeTo(null);
        JF_TipoEstoqueView.pack();
        JF_TipoEstoqueView.setResizable(false);
        JF_TipoEstoqueView.setVisible(true);
        JF_TipoEstoqueView.setTitle("Editar");
        
        
        jtf_laboratorio.setVisible(false);
        jtf_idLab.setVisible(false);
         jtf_laboratorio.setVisible(false);
        jtf_idLab.setVisible(false);
        jtf_laboratorio.setVisible(false);
//         jbt_cancelaCadastroFormulario.setEnabled(true);
//         jbt_salvaFormulario.setEnabled(true);
    }


   private void hotKeyF1()
    {
            frameTipoEstoqueView.getRootPane().registerKeyboardAction(new ActionListener() {
            public void actionPerformed(ActionEvent e)
            {
            newButton.doClick();
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_F1, 0),
                JComponent.WHEN_IN_FOCUSED_WINDOW);
    }
      private void hotKeyF2()
    {
            frameTipoEstoqueView.getRootPane().registerKeyboardAction(new ActionListener() {
            public void actionPerformed(ActionEvent e)
            {
             refreshButton.requestFocusInWindow();
          //  jbt_cancelaCadastroFormulario.doClick();
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_F2, 0),JComponent.WHEN_IN_FOCUSED_WINDOW);
    }
       private void hotKeyF3()
    {
            frameTipoEstoqueView.getRootPane().registerKeyboardAction(new ActionListener() {
            public void actionPerformed(ActionEvent e)
            {
           // jbt_salvaFormulario.doClick();
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_F3, 0),
                JComponent.WHEN_IN_FOCUSED_WINDOW);
    }
        private void hotKeyF4()
    {
            frameTipoEstoqueView.getRootPane().registerKeyboardAction(new ActionListener() {
            public void actionPerformed(ActionEvent e)
            {
                   if(jbt_editar.isEnabled()){
      
        JF_TipoEstoqueView.setSize(557, 237);//[335, 209]557, 237
        JF_TipoEstoqueView.setVisible(true);
        jtf_laboratorio.setVisible(false);
        jtf_idLab.setVisible(false);
        jtf_laboratorio.setVisible(true);
         
          
        JF_TipoEstoqueView.setLocationRelativeTo(null);
        JF_TipoEstoqueView.pack();
        JF_TipoEstoqueView.setResizable(false);
        JF_TipoEstoqueView.setVisible(true);
         }else{
                       JOptionPane.showMessageDialog(null, "Não há registro selecionado para esta o comando"+" 'Editar'", "Atenção!!",JOptionPane.INFORMATION_MESSAGE);
                   }
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_F4, 0),
                JComponent.WHEN_IN_FOCUSED_WINDOW);
    }
        
            private void hotKeyF11()
    {
            frameTipoEstoqueView.getRootPane().registerKeyboardAction(new ActionListener() {
            public void actionPerformed(ActionEvent e)
            {
                if (jtf_nomeEstoque.isEnabled()){
//                **************************
//                    String args[] = new String[1];
//                    args[0] = "Importar Fabricantes";
//                    FabricanteImports.main(args);
                }
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_F11, 0),
                JComponent.WHEN_IN_FOCUSED_WINDOW);
    }
            
                private void hotKeyF12()
    {
            frameTipoEstoqueView.getRootPane().registerKeyboardAction(new ActionListener() {
            public void actionPerformed(ActionEvent e)
            {
                if (jtf_nomeEstoque.isEnabled()){
                
//                    String args[] = new String[1];
//                    args[0] = "Importar Estoque";
//                    EstoqueImportsView.main(args);
                }
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_F12, 0),
                JComponent.WHEN_IN_FOCUSED_WINDOW);
    }

     private void hotKeyDel()
    {
            frameTipoEstoqueView.getRootPane().registerKeyboardAction(new ActionListener() {
            public void actionPerformed(ActionEvent e)
            {
            deleteButton.doClick();
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_F5, 0),
                JComponent.WHEN_IN_FOCUSED_WINDOW);
    }

         private void hotKeyEsc()
    {
            frameTipoEstoqueView.getRootPane().registerKeyboardAction(new ActionListener() {
            public void actionPerformed(ActionEvent e)
            {
             if(jtf_nomeEstoque.isEnabled())
              {
                  int opcao4;
                        Object[] botoes4 = {" SIM "," NÃO "};
                        opcao4 = JOptionPane.showOptionDialog(null, "Deseja fechar o Cadastro de Tipos de Estoque sem salvar ?", "Pergunta do Sistema", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,null,botoes4,botoes4[0]);
                        if (opcao4 ==  JOptionPane.YES_OPTION)
                        {
                   //         pararWebcam();
                         frameTipoEstoqueView.dispose();
                         } else if(opcao4 == JOptionPane.NO_OPTION)
                        {

                        }
              }
            else  if(jtf_nomeEstoque.isEnabled() == false)
              {
                  int opcao5;
                        Object[] botoes5 = {" SIM "," NÃO "};
                        opcao5 = JOptionPane.showOptionDialog(null, "Tem certeza que deseja fechar o Cadastro de Tipos de Estoque ?", "Pergunta do Sistema", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,null,botoes5,botoes5[0]);
                        if (opcao5 ==  JOptionPane.YES_OPTION)
                        {
                    //        pararWebcam();
                         frameTipoEstoqueView.dispose();
                         } else if(opcao5 == JOptionPane.NO_OPTION)
                        {

                        }

                }
            }
        }, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0),
                JComponent.WHEN_IN_FOCUSED_WINDOW);
    }

           private void iniKeyActions()
           {
           hotKeyF1();
           hotKeyF2();
           hotKeyF3();
           hotKeyF4();
           hotKeyF11();
           hotKeyF12();
           hotKeyDel();
           hotKeyEsc();
           iniKeyActionsSetas();
           }

     private void iniKeyActionsSetas()
    {

              EventQueue queue = new EventQueue()
		{
			protected void dispatchEvent(AWTEvent event)
			{
				super.dispatchEvent(event);


					String a[];
					String tecla[];

					if (!event.paramString().equals("")) {
						if  (event.paramString().substring(0, 5).equals("KEY_P")) {
							a = event.paramString().split(",");
							tecla = a[1].split("=");
                                                       System.out.println(tecla[1]);
							switch (Integer.parseInt(tecla[1])) {
                                                      case 9: //TAB

								break;
                                                            case 10: //ENTER

								break;
                                                       case 27: //ESC

								break;
                                                       case 33: //PGUP

                                                                break;
                                                       case 34: //PGDN

                                                                break;
                                                       case 35: //END

                                                                break;
                                                       case 36: //HOME

                                                                break;
                                                       case 37: //SETA-ESQUERDA

                                                                break;
                                                       case 38: //SETA-ACIMA
                                                       masterTable.requestFocusInWindow();
                                                                break;
                                                       case 39: //SETA-DIREITA

                                                                break;
                                                       case 40: //PARA BAIXO
                                                       masterTable.requestFocusInWindow();
                                                                break;
                                                       case 49: // 1

                                                           	break;
                                                       case 50: // 2

                                                           	break;
                                                       case 51: // 3

                                                           	break;
                                                       case 52: // 4

                                                           	break;
                                                       case 53: // 5

                                                           	break;
                                                       case 54: // 6

                                                           	break;
                                                       case 55: // 7

                                                           	break;
                                                       case 56: // 8

                                                           	break;
                                                       case 57: // 9

								break;
							case 112: //F1

								break;
							case 113: //F2

								break;
							case 114: //F3

								break;
							case 115: //F4

								break;
							case 116: //F5

								break;
							case 117: //F6
//
								break;
							case 118: //F7
//
								break;
							case 119: //F8
//
								break;
							case 120: //F9

								break;
							case 121: //F10
//
								break;
							case 122: //F11
//
								break;
							case 123: //F12
//
								break;

							case 127: //DEL
                                                    //    deleteButton.doClick();
								break;
							default:
                                                        	break;
							}
						}
					}
			}
		};
		Toolkit.getDefaultToolkit().getSystemEventQueue().push(queue);
     } 

    public void setJtf_idLab(String jtf_idLab) {
        this.jtf_idLab.setText(jtf_idLab);
    }

    public void setJtf_idLocal(String jtf_idLocal) {
        this.jtf_idLocal.setText(jtf_idLocal);
    }

    public void setJtf_idNomeEstoque(Integer jtf_idNomeEstoque) {
        this.jtf_idNomeEstoque.setText(jtf_idNomeEstoque.toString());
    }

    public void setJtf_localizacao(String jtf_localizacao) {
        this.jtf_localizacao.setText(jtf_localizacao);
    }

    public void setJtf_nomeEstoque(String jtf_nomeEstoque) {
        this.jtf_nomeEstoque.setText(jtf_nomeEstoque);
    }

    public void setJtf_sala(String jtf_sala) {
        this.jtf_sala.setText(jtf_sala);
    }

    public void setJtf_laboratorio(String jtf_laboratorio) {
        this.jtf_laboratorio.setText(jtf_laboratorio);
    }

    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame JF_TipoEstoqueView;
    private javax.swing.JFrame JF_pesquisar;
    private java.util.List<sislab.proteomica.beans.CadLocalizacao> cadLocalizacaoList;
    private javax.persistence.Query cadLocalizacaoQuery;
    private sislab.proteomica.engine.ConverterBusca converterBusca1;
    private javax.swing.JButton deleteButton;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton jbt_editar;
    private javax.swing.JTextField jtf_idLab;
    private javax.swing.JTextField jtf_idLocal;
    private javax.swing.JTextField jtf_idNomeEstoque;
    private javax.swing.JTextField jtf_laboratorio;
    private javax.swing.JTextField jtf_localizacao;
    private javax.swing.JTextField jtf_nomeEstoque;
    private javax.swing.JTextField jtf_sala;
    private javax.swing.JTextField jtf_tipoEstoque;
    private java.util.List<sislab.proteomica.view.estoque.TipoEstoque> list;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JButton newButton;
    private javax.persistence.Query query;
    private javax.swing.JButton refreshButton;
    private sislab.proteomica.view.estoque.TipoEstoqueCellRenderer tipoEstoqueCellRenderer1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    public static void main(String[] args) {

        EventQueue.invokeLater(new Runnable() {
            public void run() {
                if(frameTipoEstoqueView == null) 
                 frameTipoEstoqueView = new JFrame();
                tps = new TipoEstoqueView();
                frameTipoEstoqueView.setContentPane(tps); 
                frameTipoEstoqueView.setSize(772, 559);//[772, 559]
                frameTipoEstoqueView.setResizable(false);
                frameTipoEstoqueView.setLocationRelativeTo(null);
                frameTipoEstoqueView.pack();
                frameTipoEstoqueView.setVisible(true);
                frameTipoEstoqueView.setTitle(args[0]); 
            }
        });
    }
    
}
